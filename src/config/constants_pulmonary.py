
from collections import OrderedDict, Counter


ATTRIBUTE_PATTERN = '{}_'

ARDS = 'ards'
PNA_CPIS = 'pna_cpis'
COVID_XRAY = 'covid_xray'
EMERGE_XRAY = 'emerge_xray'
XRAY_IMAGES = 'xray_images'

ID = 'id_'
IDS = 'ids'

REPORTS_DIR = 'Reports'
XML_DIR = 'Annotations'
ROOT = 'root'


FOOTER = "<< INFILTRATES >>\n<< EXTRAPARENCHYMAL >>"
INFILTRATES_FOOTER = 'INFILTRATES'
EXTRAPARENCHYMAL_FOOTER = 'EXTRAPARENCHYMAL'
INFILTRATES = "infiltrates"
#NONE = 'none'
#DIFFUSE = 'diffuse'
#LOCALIZED = 'localized'

#SUSPICION = 'suspicion'
#PROBABLE = 'probable'


# assertion with subtype labels
ASSERTION = "assertion"
NONE = "none"
UNKNOWN = "unknown"
PRESENT = "present"

# region with subtype labels
REGION = "region"
PARENCHYMAL = "parenchymal"
EXTRAPARENCHYMAL = "extraparenchymal"


# side with subtype labels
SIDE = "side"
UNILATERAL = "unilateral"
BILATERAL = "bilateral"

# size with subtype labels
SIZE = "size"
SMALL = "small"
MODERATE = "moderate"
LARGE = "large"

# negation (no subtype label)
NEGATION = "negation"

OTHER = "other"

LABELS = OrderedDict()
LABELS[ASSERTION] = [NONE, UNKNOWN, PRESENT, UNILATERAL, BILATERAL]
LABELS[REGION] = [PARENCHYMAL, EXTRAPARENCHYMAL]
LABELS[SIDE] = [UNILATERAL, BILATERAL]
LABELS[SIZE] = [SMALL, MODERATE, LARGE]
LABELS[NEGATION] = None

HAS_SUBTYPE = [k for k, v in LABELS.items() if v is not None]



#DOC_DEFINITION = OrderedDict()
#DOC_DEFINITION[INFILTRATES] =      [NONE, UNKNOWN, PRESENT, UNILATERAL, BILATERAL]
#DOC_DEFINITION[EXTRAPARENCHYMAL] = [NONE, UNKNOWN, PRESENT, UNILATERAL, BILATERAL]

DOC_DEFINITION = OrderedDict()
DOC_DEFINITION[INFILTRATES] =      [NONE, PRESENT, UNILATERAL, BILATERAL]
DOC_DEFINITION[EXTRAPARENCHYMAL] = [NONE, PRESENT, UNILATERAL, BILATERAL]


DOC_DEFINITION_BINARY = OrderedDict()
DOC_DEFINITION_BINARY[INFILTRATES] =      [NONE, BILATERAL]
DOC_DEFINITION_BINARY[EXTRAPARENCHYMAL] = [NONE, BILATERAL]


DOC_MAP = OrderedDict()
DOC_MAP[NONE] = NONE
DOC_MAP[UNKNOWN] = NONE
DOC_MAP[PRESENT] = PRESENT
DOC_MAP[UNILATERAL] = UNILATERAL
DOC_MAP[BILATERAL] = BILATERAL


DOC_MAP_BINARY = OrderedDict()
DOC_MAP_BINARY[NONE] = NONE
DOC_MAP_BINARY[UNKNOWN] = NONE
DOC_MAP_BINARY[PRESENT] = NONE
DOC_MAP_BINARY[UNILATERAL] = NONE
DOC_MAP_BINARY[BILATERAL] = BILATERAL



SENT_DEFINITION = OrderedDict()
SENT_DEFINITION[INFILTRATES] = []
SENT_DEFINITION[INFILTRATES].append((PARENCHYMAL, UNILATERAL))
SENT_DEFINITION[INFILTRATES].append((PARENCHYMAL, BILATERAL))
SENT_DEFINITION[INFILTRATES].append((PARENCHYMAL, NEGATION))
SENT_DEFINITION[EXTRAPARENCHYMAL] = []
SENT_DEFINITION[EXTRAPARENCHYMAL].append((EXTRAPARENCHYMAL, UNILATERAL))
SENT_DEFINITION[EXTRAPARENCHYMAL].append((EXTRAPARENCHYMAL, BILATERAL))
SENT_DEFINITION[EXTRAPARENCHYMAL].append((EXTRAPARENCHYMAL, NEGATION))


ENTITY_DEFINITION = OrderedDict()
ENTITY_DEFINITION[REGION] = [NONE, PARENCHYMAL, EXTRAPARENCHYMAL]
ENTITY_DEFINITION[SIDE] = [NONE, UNILATERAL, BILATERAL]
ENTITY_DEFINITION[SIZE] = [NONE, SMALL, MODERATE, LARGE]
ENTITY_DEFINITION[NEGATION] = [NONE, NEGATION]

RELATION_DEFINITION = []
RELATION_DEFINITION.append((REGION, SIDE))
RELATION_DEFINITION.append((REGION, SIZE))
RELATION_DEFINITION.append((REGION, NEGATION))



ENTITY_DEFINITION_SWAP = OrderedDict()
ENTITY_DEFINITION_SWAP[REGION] = [NONE, PARENCHYMAL, EXTRAPARENCHYMAL]
ENTITY_DEFINITION_SWAP[SIDE] = [NONE, NEGATION, UNILATERAL, BILATERAL, OTHER]

RELATION_DEFINITION_SWAP = []
RELATION_DEFINITION_SWAP.append((REGION, SIDE))




LABEL_MAP = OrderedDict()
LABEL_MAP[INFILTRATES] =      [NONE, UNKNOWN, PRESENT, UNILATERAL, BILATERAL]
LABEL_MAP[EXTRAPARENCHYMAL] = [NONE, UNKNOWN, PRESENT, UNILATERAL, BILATERAL]
LABEL_MAP[REGION] = [NONE, PARENCHYMAL, EXTRAPARENCHYMAL]
LABEL_MAP[SIDE] = [NONE, UNILATERAL, BILATERAL]
LABEL_MAP[SIZE] = [NONE, SMALL, MODERATE, LARGE]
LABEL_MAP[NEGATION] = [NONE, NEGATION]


ENTITY_TYPES = [REGION, SIDE, SIZE, NEGATION]
ENTITY_TYPES_A = [REGION]
ENTITY_TYPES_B = [SIDE, SIZE, NEGATION]


TYPE = 'type'
REPORT = 'report'
XML = 'xml'
CHAR_START = 'char_start'
CHAR_COUNT = 'char_count'
LABEL = 'label'
SPAN = 'span'


CPIS = 'CPIS'
PNA = 'PNA'
CPIS_DX = 'CPISdx'
PNA_DX = 'PNAdx'
EVIDENCE = 'evidence'

CHAR_IDXS = 'char_idxs'

CPIS_NONE = '1A CPIS: no infiltrate (0)'
CPIS_DIFFUSE = '1B CPIS: diffuse infiltrate or atelectasis (1)'
CPIS_LOCALIZED = '1C CPIS: localized infiltrate (2)'

PNA_NONE = '2A PNA: no suspicion'
PNA_SUSPICION = '2B PNA: suspicion of pneumonia'
PNA_PROBABLE = '2C PNA: probable pneumonia'

EVIDENCE_CPIS = 'E1 Evidence span: CPIS only'
EVIDENCE_PNA = 'E2 Evidence span: PNA only'
EVIDENCE_BOTH = 'E3 Evidence span: CPIS and PNA'

ADD_TO_TYPE = 'addToType'
CLOSE_TYPE = 'closeType'


PATH = 'path'
PATH_LABELS = 'path_labels'
PATH_REPORT = 'path_report'
